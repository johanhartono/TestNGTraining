<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="2" total="88" passed="72" failed="13" skipped="1">
  <reporter-output>
    <line>
      <![CDATA[This test verifies the current selenium compatibility with TestNG by launching the chrome driver]]>
    </line>
    <line>
      <![CDATA[Launching Google Chrome Driver version 81 for this test]]>
    </line>
    <line>
      <![CDATA[The website used was demoqa for this test]]>
    </line>
    <line>
      <![CDATA[Driver Closed After Testing]]>
    </line>
    <line>
      <![CDATA[This test verifies the current selenium compatibility with TestNG by launching the chrome driver]]>
    </line>
    <line>
      <![CDATA[Launching Google Chrome Driver version 81 for this test]]>
    </line>
    <line>
      <![CDATA[The website used was DemoQA for this test(Hard Asserts)]]>
    </line>
    <line>
      <![CDATA[This test verifies the current selenium compatibility with TestNG by launching the chrome driver]]>
    </line>
    <line>
      <![CDATA[Launching Google Chrome Driver version 81 for this test]]>
    </line>
    <line>
      <![CDATA[The website used was DemoQA for this test(soft Asserts)]]>
    </line>
    <line>
      <![CDATA[Driver Closed After Testing]]>
    </line>
  </reporter-output>
  <suite started-at="2024-09-08T01:42:27 WIB" name="Default suite" finished-at="2024-09-08T01:44:02 WIB" duration-ms="95501">
    <groups>
      <group name="Testing tool">
        <method signature="After_groups.testcase1()[pri:0, instance:com.javatpoint.afterGroups.After_groups@f31c0c6]" name="testcase1" class="com.javatpoint.afterGroups.After_groups"/>
        <method signature="After_groups.testcase2()[pri:0, instance:com.javatpoint.afterGroups.After_groups@f31c0c6]" name="testcase2" class="com.javatpoint.afterGroups.After_groups"/>
        <method signature="After_groups.testcase3()[pri:0, instance:com.javatpoint.afterGroups.After_groups@f31c0c6]" name="testcase3" class="com.javatpoint.afterGroups.After_groups"/>
      </group> <!-- Testing tool -->
      <group name="software company">
        <method signature="Groups.infosys()[pri:0, instance:com.javatpoint.annotations.Groups@31ea9581]" name="infosys" class="com.javatpoint.annotations.Groups"/>
        <method signature="Groups.wipro()[pri:0, instance:com.javatpoint.annotations.Groups@31ea9581]" name="wipro" class="com.javatpoint.annotations.Groups"/>
      </group> <!-- software company -->
      <group name="SignIn">
        <method signature="GroupDependentTestMethods.LogIn()[pri:0, instance:com.toolsqa.GroupDependentTestMethods@4bdeaabb]" name="LogIn" class="com.toolsqa.GroupDependentTestMethods"/>
        <method signature="GroupDependentTestMethods.OpenBrowser()[pri:0, instance:com.toolsqa.GroupDependentTestMethods@4bdeaabb]" name="OpenBrowser" class="com.toolsqa.GroupDependentTestMethods"/>
      </group> <!-- SignIn -->
      <group name="IT Department">
        <method signature="Class1.testcase2()[pri:0, instance:com.javatpoint.beforeGroups.Class1@6c4906d3]" name="testcase2" class="com.javatpoint.beforeGroups.Class1"/>
        <method signature="Class1.testcase3()[pri:0, instance:com.javatpoint.beforeGroups.Class1@6c4906d3]" name="testcase3" class="com.javatpoint.beforeGroups.Class1"/>
      </group> <!-- IT Department -->
      <group name="demo">
        <method signature="GroupExample.checkTitle()[pri:0, instance:com.toolsqa.GroupExample@645aa696]" name="checkTitle" class="com.toolsqa.GroupExample"/>
        <method signature="GroupExample.click_element()[pri:0, instance:com.toolsqa.GroupExample@645aa696]" name="click_element" class="com.toolsqa.GroupExample"/>
      </group> <!-- demo -->
    </groups>
    <test started-at="2024-09-08T01:42:27 WIB" name="Default test" finished-at="2024-09-08T01:44:02 WIB" duration-ms="95501">
      <class name="com.javatpoint.Listener.Testcases">
        <test-method signature="testtofail()[pri:0, instance:com.javatpoint.Listener.Testcases@6440112d]" started-at="2024-09-08T01:44:00 WIB" name="testtofail" finished-at="2024-09-08T01:44:00 WIB" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testtofail -->
        <test-method signature="testtopass()[pri:0, instance:com.javatpoint.Listener.Testcases@6440112d]" started-at="2024-09-08T01:44:00 WIB" name="testtopass" finished-at="2024-09-08T01:44:00 WIB" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testtopass -->
      </class> <!-- com.javatpoint.Listener.Testcases -->
      <class name="com.toolsqa.GroupExample">
        <test-method signature="checkTitle()[pri:0, instance:com.toolsqa.GroupExample@645aa696]" started-at="2024-09-08T01:43:40 WIB" name="checkTitle" finished-at="2024-09-08T01:43:40 WIB" duration-ms="1" status="FAIL">
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "org.openqa.selenium.WebDriver.getTitle()" because "this.driver" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebDriver.getTitle()" because "this.driver" is null
at com.toolsqa.GroupExample.checkTitle(GroupExample.java:32)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTitle -->
        <test-method signature="click_element()[pri:0, instance:com.toolsqa.GroupExample@645aa696]" started-at="2024-09-08T01:43:40 WIB" name="click_element" finished-at="2024-09-08T01:43:40 WIB" duration-ms="2" status="FAIL">
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "org.openqa.selenium.WebDriver.findElement(org.openqa.selenium.By)" because "this.driver" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebDriver.findElement(org.openqa.selenium.By)" because "this.driver" is null
at com.toolsqa.GroupExample.click_element(GroupExample.java:38)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- click_element -->
        <test-method signature="starting_point()[pri:0, instance:com.toolsqa.GroupExample@645aa696]" started-at="2024-09-08T01:43:47 WIB" name="starting_point" finished-at="2024-09-08T01:44:00 WIB" duration-ms="12567" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- starting_point -->
      </class> <!-- com.toolsqa.GroupExample -->
      <class name="com.javatpoint.annotations.Groups">
        <test-method signature="infosys()[pri:0, instance:com.javatpoint.annotations.Groups@31ea9581]" started-at="2024-09-08T01:43:47 WIB" name="infosys" finished-at="2024-09-08T01:43:47 WIB" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- infosys -->
        <test-method signature="technip()[pri:0, instance:com.javatpoint.annotations.Groups@31ea9581]" started-at="2024-09-08T01:44:00 WIB" name="technip" finished-at="2024-09-08T01:44:00 WIB" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- technip -->
        <test-method signature="wipro()[pri:0, instance:com.javatpoint.annotations.Groups@31ea9581]" started-at="2024-09-08T01:44:00 WIB" name="wipro" finished-at="2024-09-08T01:44:00 WIB" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wipro -->
      </class> <!-- com.javatpoint.annotations.Groups -->
      <class name="com.javatpoint.beforeTest.hr_department">
        <test-method signature="counsellor()[pri:0, instance:com.javatpoint.beforeTest.hr_department@231f98ef]" started-at="2024-09-08T01:43:40 WIB" name="counsellor" finished-at="2024-09-08T01:43:40 WIB" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- counsellor -->
        <test-method signature="hr()[pri:0, instance:com.javatpoint.beforeTest.hr_department@231f98ef]" started-at="2024-09-08T01:43:47 WIB" name="hr" finished-at="2024-09-08T01:43:47 WIB" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hr -->
        <test-method signature="manager()[pri:0, instance:com.javatpoint.beforeTest.hr_department@231f98ef]" started-at="2024-09-08T01:43:47 WIB" name="manager" finished-at="2024-09-08T01:43:47 WIB" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- manager -->
      </class> <!-- com.javatpoint.beforeTest.hr_department -->
      <class name="sequenceTestNG">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:sequenceTestNG@312aa7c]" started-at="2024-09-08T01:42:27 WIB" name="beforeSuite" finished-at="2024-09-08T01:42:27 WIB" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="preparingTest1()[pri:0, instance:sequenceTestNG@312aa7c]" started-at="2024-09-08T01:42:27 WIB" name="preparingTest1" finished-at="2024-09-08T01:42:27 WIB" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preparingTest1 -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:sequenceTestNG@312aa7c]" started-at="2024-09-08T01:43:47 WIB" name="beforeClass" finished-at="2024-09-08T01:43:47 WIB" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:sequenceTestNG@312aa7c]" started-at="2024-09-08T01:43:47 WIB" name="beforeMethod" finished-at="2024-09-08T01:43:47 WIB" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="runningTest1()[pri:0, instance:sequenceTestNG@312aa7c]" started-at="2024-09-08T01:43:47 WIB" name="runningTest1" finished-at="2024-09-08T01:43:47 WIB" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runningTest1 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:sequenceTestNG@312aa7c]" started-at="2024-09-08T01:43:47 WIB" name="afterMethod" finished-at="2024-09-08T01:43:47 WIB" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:sequenceTestNG@312aa7c]" started-at="2024-09-08T01:43:47 WIB" name="beforeMethod" finished-at="2024-09-08T01:43:47 WIB" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="runningTest2()[pri:0, instance:sequenceTestNG@312aa7c]" started-at="2024-09-08T01:43:47 WIB" name="runningTest2" finished-at="2024-09-08T01:43:47 WIB" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runningTest2 -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:sequenceTestNG@312aa7c]" started-at="2024-09-08T01:43:47 WIB" name="afterClassMethod" finished-at="2024-09-08T01:43:47 WIB" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:sequenceTestNG@312aa7c]" started-at="2024-09-08T01:43:47 WIB" name="afterMethod" finished-at="2024-09-08T01:43:47 WIB" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="ResultTest1()[pri:0, instance:sequenceTestNG@312aa7c]" started-at="2024-09-08T01:44:02 WIB" name="ResultTest1" finished-at="2024-09-08T01:44:02 WIB" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ResultTest1 -->
        <test-method is-config="true" signature="afterSuiteMethod()[pri:0, instance:sequenceTestNG@312aa7c]" started-at="2024-09-08T01:44:03 WIB" name="afterSuiteMethod" finished-at="2024-09-08T01:44:03 WIB" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuiteMethod -->
      </class> <!-- sequenceTestNG -->
      <class name="com.toolsqa.DataProviderExample">
        <test-method signature="myTest(java.lang.String)[pri:0, instance:com.toolsqa.DataProviderExample@536f2a7e]" started-at="2024-09-08T01:43:47 WIB" name="myTest" data-provider="data-provider" finished-at="2024-09-08T01:43:47 WIB" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[First-Value]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myTest -->
        <test-method signature="myTest(java.lang.String)[pri:0, instance:com.toolsqa.DataProviderExample@536f2a7e]" started-at="2024-09-08T01:43:47 WIB" name="myTest" data-provider="data-provider" finished-at="2024-09-08T01:43:47 WIB" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Second-Value]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myTest -->
      </class> <!-- com.toolsqa.DataProviderExample -->
      <class name="com.javatpoint.annotations.Depend_On_Methods">
        <test-method signature="MobileStudentLogin()[pri:0, instance:com.javatpoint.annotations.Depend_On_Methods@70cf32e3]" started-at="2024-09-08T01:43:08 WIB" name="MobileStudentLogin" finished-at="2024-09-08T01:43:08 WIB" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileStudentLogin -->
        <test-method signature="WebStudentLogin()[pri:0, instance:com.javatpoint.annotations.Depend_On_Methods@70cf32e3]" started-at="2024-09-08T01:43:40 WIB" name="WebStudentLogin" finished-at="2024-09-08T01:43:40 WIB" duration-ms="12" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WebStudentLogin -->
        <test-method signature="APIStudentLogin()[pri:0, instance:com.javatpoint.annotations.Depend_On_Methods@70cf32e3]" started-at="2024-09-08T01:43:40 WIB" name="APIStudentLogin" finished-at="2024-09-08T01:43:40 WIB" depends-on-methods="com.javatpoint.annotations.Depend_On_Methods.WebStudentLogin" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- APIStudentLogin -->
      </class> <!-- com.javatpoint.annotations.Depend_On_Methods -->
      <class name="com.javatpoint.beforeSuite.Car_loan">
        <test-method signature="car_loan()[pri:0, instance:com.javatpoint.beforeSuite.Car_loan@5a59ca5e]" started-at="2024-09-08T01:43:40 WIB" name="car_loan" finished-at="2024-09-08T01:43:40 WIB" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- car_loan -->
      </class> <!-- com.javatpoint.beforeSuite.Car_loan -->
      <class name="com.toolsqa.GroupDependentTestMethods">
        <test-method signature="LogIn()[pri:0, instance:com.toolsqa.GroupDependentTestMethods@4bdeaabb]" started-at="2024-09-08T01:43:08 WIB" name="LogIn" finished-at="2024-09-08T01:43:08 WIB" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LogIn -->
        <test-method signature="OpenBrowser()[pri:0, instance:com.toolsqa.GroupDependentTestMethods@4bdeaabb]" started-at="2024-09-08T01:43:08 WIB" name="OpenBrowser" finished-at="2024-09-08T01:43:08 WIB" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OpenBrowser -->
        <test-method signature="ViewAcc()[pri:0, instance:com.toolsqa.GroupDependentTestMethods@4bdeaabb]" started-at="2024-09-08T01:43:39 WIB" name="ViewAcc" depends-on-groups="SignIn" finished-at="2024-09-08T01:43:40 WIB" duration-ms="15" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ViewAcc -->
      </class> <!-- com.toolsqa.GroupDependentTestMethods -->
      <class name="com.javatpoint.beforeGroups.Class1">
        <test-method signature="testcase1()[pri:0, instance:com.javatpoint.beforeGroups.Class1@6c4906d3]" started-at="2024-09-08T01:44:00 WIB" name="testcase1" finished-at="2024-09-08T01:44:00 WIB" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase1 -->
        <test-method signature="testcase2()[pri:0, instance:com.javatpoint.beforeGroups.Class1@6c4906d3]" started-at="2024-09-08T01:44:00 WIB" name="testcase2" finished-at="2024-09-08T01:44:00 WIB" duration-ms="15" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase2 -->
        <test-method signature="testcase3()[pri:0, instance:com.javatpoint.beforeGroups.Class1@6c4906d3]" started-at="2024-09-08T01:44:00 WIB" name="testcase3" finished-at="2024-09-08T01:44:00 WIB" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase3 -->
      </class> <!-- com.javatpoint.beforeGroups.Class1 -->
      <class name="com.javatpoint.annotations.Enabled">
        <test-method signature="c_language()[pri:0, instance:com.javatpoint.annotations.Enabled@65987993]" started-at="2024-09-08T01:43:40 WIB" name="c_language" finished-at="2024-09-08T01:43:40 WIB" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- c_language -->
        <test-method signature="java()[pri:0, instance:com.javatpoint.annotations.Enabled@65987993]" started-at="2024-09-08T01:43:47 WIB" name="java" finished-at="2024-09-08T01:43:47 WIB" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- java -->
      </class> <!-- com.javatpoint.annotations.Enabled -->
      <class name="com.javatpoint.afterTest.Fixed_deposit">
        <test-method signature="fixed_deposit()[pri:0, instance:com.javatpoint.afterTest.Fixed_deposit@71075444]" started-at="2024-09-08T01:43:47 WIB" name="fixed_deposit" finished-at="2024-09-08T01:43:47 WIB" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fixed_deposit -->
        <test-method signature="roi()[pri:0, instance:com.javatpoint.afterTest.Fixed_deposit@71075444]" started-at="2024-09-08T01:43:47 WIB" name="roi" finished-at="2024-09-08T01:43:47 WIB" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- roi -->
      </class> <!-- com.javatpoint.afterTest.Fixed_deposit -->
      <class name="com.toolsqa.HardSoftAssertsExample">
        <test-method signature="OpenBrowser1()[pri:0, instance:com.toolsqa.HardSoftAssertsExample@64712be]" started-at="2024-09-08T01:43:08 WIB" name="OpenBrowser1" description="hard asserts will stop when first test was failed" finished-at="2024-09-08T01:43:39 WIB" duration-ms="31755" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[First Test Failed then Stopped expected [DEMOQAX] but found [DEMOQA]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: First Test Failed then Stopped expected [DEMOQAX] but found [DEMOQA]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at com.toolsqa.HardSoftAssertsExample.OpenBrowser1(HardSoftAssertsExample.java:51)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[This test verifies the current selenium compatibility with TestNG by launching the chrome driver]]>
            </line>
            <line>
              <![CDATA[Launching Google Chrome Driver version 81 for this test]]>
            </line>
            <line>
              <![CDATA[The website used was DemoQA for this test(Hard Asserts)]]>
            </line>
          </reporter-output>
        </test-method> <!-- OpenBrowser1 -->
        <test-method signature="OpenBrowser2()[pri:1, instance:com.toolsqa.HardSoftAssertsExample@64712be]" started-at="2024-09-08T01:44:00 WIB" name="OpenBrowser2" description="soft asserts will continue even first test was failed" finished-at="2024-09-08T01:44:02 WIB" duration-ms="1596" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
First Test expected [DEMOQAX] but found [DEMOQA],
Second Test expected [DEMOQAX] but found [DEMOQA],
Third Test expected [DEMOQAX] but found [DEMOQA]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
First Test expected [DEMOQAX] but found [DEMOQA],
Second Test expected [DEMOQAX] but found [DEMOQA],
Third Test expected [DEMOQAX] but found [DEMOQA]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at com.toolsqa.HardSoftAssertsExample.OpenBrowser2(HardSoftAssertsExample.java:90)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[This test verifies the current selenium compatibility with TestNG by launching the chrome driver]]>
            </line>
            <line>
              <![CDATA[Launching Google Chrome Driver version 81 for this test]]>
            </line>
            <line>
              <![CDATA[The website used was DemoQA for this test(soft Asserts)]]>
            </line>
          </reporter-output>
        </test-method> <!-- OpenBrowser2 -->
        <test-method signature="CloseBrowser()[pri:2, instance:com.toolsqa.HardSoftAssertsExample@64712be]" started-at="2024-09-08T01:44:02 WIB" name="CloseBrowser" finished-at="2024-09-08T01:44:02 WIB" duration-ms="284" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Driver Closed After Testing]]>
            </line>
          </reporter-output>
        </test-method> <!-- CloseBrowser -->
      </class> <!-- com.toolsqa.HardSoftAssertsExample -->
      <class name="com.javatpoint.parameters.Subtract">
        <test-method signature="add(int,int)[pri:0, instance:com.javatpoint.parameters.Subtract@53499d85]" started-at="2024-09-08T01:43:40 WIB" name="add" finished-at="2024-09-08T01:43:40 WIB" duration-ms="0" status="FAIL">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Parameter 'a' is required by @Test on method add but has not been marked @Optional or defined
in C:\Users\Johan Linda\AppData\Local\Temp\testng-eclipse--1693924006\testng-customsuite.xml]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Parameter 'a' is required by @Test on method add but has not been marked @Optional or defined
in C:\Users\Johan Linda\AppData\Local\Temp\testng-eclipse--1693924006\testng-customsuite.xml
at org.testng.internal.Parameters.createParams(Parameters.java:270)
at org.testng.internal.Parameters.createParametersForMethod(Parameters.java:358)
at org.testng.internal.Parameters.createParameters(Parameters.java:700)
at org.testng.internal.Parameters.handleParameters(Parameters.java:884)
at org.testng.internal.Parameters.handleParameters(Parameters.java:740)
at org.testng.internal.ParameterHandler.handleParameters(ParameterHandler.java:59)
at org.testng.internal.ParameterHandler.createParameters(ParameterHandler.java:38)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:791)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- add -->
      </class> <!-- com.javatpoint.parameters.Subtract -->
      <class name="com.javatpoint.beforeClass.Class2">
        <test-method is-config="true" signature="before_class()[pri:0, instance:com.javatpoint.beforeClass.Class2@782a4fff]" started-at="2024-09-08T01:44:00 WIB" name="before_class" finished-at="2024-09-08T01:44:00 WIB" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before_class -->
        <test-method signature="testcase3()[pri:0, instance:com.javatpoint.beforeClass.Class2@782a4fff]" started-at="2024-09-08T01:44:00 WIB" name="testcase3" finished-at="2024-09-08T01:44:00 WIB" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase3 -->
        <test-method signature="testcase4()[pri:0, instance:com.javatpoint.beforeClass.Class2@782a4fff]" started-at="2024-09-08T01:44:00 WIB" name="testcase4" finished-at="2024-09-08T01:44:00 WIB" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase4 -->
      </class> <!-- com.javatpoint.beforeClass.Class2 -->
      <class name="com.toolsqa.MultiBrowser">
        <test-method is-config="true" signature="beforeTest(java.lang.String)[pri:0, instance:com.toolsqa.MultiBrowser@30ed9c6c]" started-at="2024-09-08T01:43:47 WIB" name="beforeTest" finished-at="1970-01-01T07:00:00 WIB" duration-ms="-1725734627408" status="FAIL">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Parameter 'browser' is required by BeforeClass on method beforeTest but has not been marked @Optional or defined
in C:\Users\Johan Linda\AppData\Local\Temp\testng-eclipse--1693924006\testng-customsuite.xml]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Parameter 'browser' is required by BeforeClass on method beforeTest but has not been marked @Optional or defined
in C:\Users\Johan Linda\AppData\Local\Temp\testng-eclipse--1693924006\testng-customsuite.xml
at org.testng.internal.Parameters.createParams(Parameters.java:270)
at org.testng.internal.Parameters.createParametersForMethod(Parameters.java:358)
at org.testng.internal.Parameters.createParameters(Parameters.java:700)
at org.testng.internal.Parameters.createConfigurationParameters(Parameters.java:168)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:302)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:176)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:122)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="login()[pri:0, instance:com.toolsqa.MultiBrowser@30ed9c6c]" started-at="2024-09-08T01:43:47 WIB" name="login" finished-at="2024-09-08T01:43:47 WIB" duration-ms="0" status="SKIP">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Parameter 'browser' is required by BeforeClass on method beforeTest but has not been marked @Optional or defined
in C:\Users\Johan Linda\AppData\Local\Temp\testng-eclipse--1693924006\testng-customsuite.xml]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Parameter 'browser' is required by BeforeClass on method beforeTest but has not been marked @Optional or defined
in C:\Users\Johan Linda\AppData\Local\Temp\testng-eclipse--1693924006\testng-customsuite.xml
at org.testng.internal.Parameters.createParams(Parameters.java:270)
at org.testng.internal.Parameters.createParametersForMethod(Parameters.java:358)
at org.testng.internal.Parameters.createParameters(Parameters.java:700)
at org.testng.internal.Parameters.createConfigurationParameters(Parameters.java:168)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:302)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:176)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:122)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:com.toolsqa.MultiBrowser@30ed9c6c]" started-at="2024-09-08T01:43:47 WIB" name="afterTest" finished-at="1970-01-01T07:00:00 WIB" duration-ms="-1725734627420" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- com.toolsqa.MultiBrowser -->
      <class name="com.javatpoint.beforeMethod.Before_Methods">
        <test-method is-config="true" signature="before_method()[pri:0, instance:com.javatpoint.beforeMethod.Before_Methods@46c670a6]" started-at="2024-09-08T01:43:40 WIB" name="before_method" finished-at="2024-09-08T01:43:40 WIB" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before_method -->
        <test-method signature="difference()[pri:0, instance:com.javatpoint.beforeMethod.Before_Methods@46c670a6]" started-at="2024-09-08T01:43:40 WIB" name="difference" finished-at="2024-09-08T01:43:40 WIB" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- difference -->
        <test-method is-config="true" signature="before_method()[pri:0, instance:com.javatpoint.beforeMethod.Before_Methods@46c670a6]" started-at="2024-09-08T01:44:00 WIB" name="before_method" finished-at="2024-09-08T01:44:00 WIB" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before_method -->
        <test-method signature="sum()[pri:0, instance:com.javatpoint.beforeMethod.Before_Methods@46c670a6]" started-at="2024-09-08T01:44:00 WIB" name="sum" finished-at="2024-09-08T01:44:00 WIB" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sum -->
      </class> <!-- com.javatpoint.beforeMethod.Before_Methods -->
      <class name="com.javatpoint.annotations.Descriptions">
        <test-method signature="testcase1()[pri:0, instance:com.javatpoint.annotations.Descriptions@2fd1731c]" started-at="2024-09-08T01:44:00 WIB" name="testcase1" description="This is testcase1" finished-at="2024-09-08T01:44:00 WIB" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase1 -->
        <test-method signature="testcase2()[pri:0, instance:com.javatpoint.annotations.Descriptions@2fd1731c]" started-at="2024-09-08T01:44:00 WIB" name="testcase2" description="This is testcase2" finished-at="2024-09-08T01:44:00 WIB" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase2 -->
        <test-method signature="testcase3()[pri:0, instance:com.javatpoint.annotations.Descriptions@2fd1731c]" started-at="2024-09-08T01:44:00 WIB" name="testcase3" description="This is testcase3" finished-at="2024-09-08T01:44:00 WIB" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase3 -->
      </class> <!-- com.javatpoint.annotations.Descriptions -->
      <class name="com.javatpoint.beforeClass.Class1">
        <test-method is-config="true" signature="before_class()[pri:0, instance:com.javatpoint.beforeClass.Class1@59fc684e]" started-at="2024-09-08T01:44:00 WIB" name="before_class" finished-at="2024-09-08T01:44:00 WIB" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before_class -->
        <test-method signature="testcase1()[pri:0, instance:com.javatpoint.beforeClass.Class1@59fc684e]" started-at="2024-09-08T01:44:00 WIB" name="testcase1" finished-at="2024-09-08T01:44:00 WIB" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase1 -->
        <test-method signature="testcase2()[pri:0, instance:com.javatpoint.beforeClass.Class1@59fc684e]" started-at="2024-09-08T01:44:00 WIB" name="testcase2" finished-at="2024-09-08T01:44:00 WIB" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase2 -->
      </class> <!-- com.javatpoint.beforeClass.Class1 -->
      <class name="com.javatpoint.annotations.Priority">
        <test-method signature="mango()[pri:0, instance:com.javatpoint.annotations.Priority@5ae81e1]" started-at="2024-09-08T01:43:47 WIB" name="mango" finished-at="2024-09-08T01:43:47 WIB" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mango -->
        <test-method signature="watermelon()[pri:1, instance:com.javatpoint.annotations.Priority@5ae81e1]" started-at="2024-09-08T01:44:02 WIB" name="watermelon" finished-at="2024-09-08T01:44:02 WIB" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- watermelon -->
        <test-method signature="apple()[pri:2, instance:com.javatpoint.annotations.Priority@5ae81e1]" started-at="2024-09-08T01:44:02 WIB" name="apple" finished-at="2024-09-08T01:44:02 WIB" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- apple -->
      </class> <!-- com.javatpoint.annotations.Priority -->
      <class name="com.javatpoint.beforeTest.it_department">
        <test-method is-config="true" signature="before_test()[pri:0, instance:com.javatpoint.beforeTest.it_department@5ae76500]" started-at="2024-09-08T01:42:27 WIB" name="before_test" finished-at="2024-09-08T01:42:27 WIB" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before_test -->
        <test-method signature="qa_analyst()[pri:0, instance:com.javatpoint.beforeTest.it_department@5ae76500]" started-at="2024-09-08T01:43:47 WIB" name="qa_analyst" finished-at="2024-09-08T01:43:47 WIB" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- qa_analyst -->
        <test-method signature="software_developers()[pri:0, instance:com.javatpoint.beforeTest.it_department@5ae76500]" started-at="2024-09-08T01:43:47 WIB" name="software_developers" finished-at="2024-09-08T01:43:47 WIB" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- software_developers -->
        <test-method signature="software_testers()[pri:0, instance:com.javatpoint.beforeTest.it_department@5ae76500]" started-at="2024-09-08T01:43:47 WIB" name="software_testers" finished-at="2024-09-08T01:43:47 WIB" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- software_testers -->
      </class> <!-- com.javatpoint.beforeTest.it_department -->
      <class name="com.toolsqa.SingleDependentTestMethods">
        <test-method signature="OpenBrowser()[pri:0, instance:com.toolsqa.SingleDependentTestMethods@6063d80a]" started-at="2024-09-08T01:43:08 WIB" name="OpenBrowser" finished-at="2024-09-08T01:43:08 WIB" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OpenBrowser -->
        <test-method signature="SignIn()[pri:0, instance:com.toolsqa.SingleDependentTestMethods@6063d80a]" started-at="2024-09-08T01:43:39 WIB" name="SignIn" finished-at="2024-09-08T01:43:39 WIB" depends-on-methods="com.toolsqa.SingleDependentTestMethods.OpenBrowser" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SignIn -->
        <test-method signature="LogOut()[pri:0, instance:com.toolsqa.SingleDependentTestMethods@6063d80a]" started-at="2024-09-08T01:43:39 WIB" name="LogOut" finished-at="2024-09-08T01:43:39 WIB" depends-on-methods="com.toolsqa.SingleDependentTestMethods.SignIn" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LogOut -->
      </class> <!-- com.toolsqa.SingleDependentTestMethods -->
      <class name="com.javatpoint.beforeSuite.Home_loan">
        <test-method signature="home_loan()[pri:0, instance:com.javatpoint.beforeSuite.Home_loan@1133ec6e]" started-at="2024-09-08T01:43:47 WIB" name="home_loan" finished-at="2024-09-08T01:43:47 WIB" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- home_loan -->
      </class> <!-- com.javatpoint.beforeSuite.Home_loan -->
      <class name="com.javatpoint.parameters.Fruits">
        <test-method signature="mango(java.lang.String)[pri:0, instance:com.javatpoint.parameters.Fruits@355e34c7]" started-at="2024-09-08T01:43:47 WIB" name="mango" finished-at="2024-09-08T01:43:47 WIB" duration-ms="0" status="FAIL">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Parameter 'mango' is required by @Test on method mango but has not been marked @Optional or defined
in C:\Users\Johan Linda\AppData\Local\Temp\testng-eclipse--1693924006\testng-customsuite.xml]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Parameter 'mango' is required by @Test on method mango but has not been marked @Optional or defined
in C:\Users\Johan Linda\AppData\Local\Temp\testng-eclipse--1693924006\testng-customsuite.xml
at org.testng.internal.Parameters.createParams(Parameters.java:270)
at org.testng.internal.Parameters.createParametersForMethod(Parameters.java:358)
at org.testng.internal.Parameters.createParameters(Parameters.java:700)
at org.testng.internal.Parameters.handleParameters(Parameters.java:884)
at org.testng.internal.Parameters.handleParameters(Parameters.java:740)
at org.testng.internal.ParameterHandler.handleParameters(ParameterHandler.java:59)
at org.testng.internal.ParameterHandler.createParameters(ParameterHandler.java:38)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:791)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mango -->
        <test-method signature="orange(java.lang.String)[pri:0, instance:com.javatpoint.parameters.Fruits@355e34c7]" started-at="2024-09-08T01:43:47 WIB" name="orange" finished-at="2024-09-08T01:43:47 WIB" duration-ms="0" status="FAIL">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Parameter 'orange' is required by @Test on method orange but has not been marked @Optional or defined
in C:\Users\Johan Linda\AppData\Local\Temp\testng-eclipse--1693924006\testng-customsuite.xml]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Parameter 'orange' is required by @Test on method orange but has not been marked @Optional or defined
in C:\Users\Johan Linda\AppData\Local\Temp\testng-eclipse--1693924006\testng-customsuite.xml
at org.testng.internal.Parameters.createParams(Parameters.java:270)
at org.testng.internal.Parameters.createParametersForMethod(Parameters.java:358)
at org.testng.internal.Parameters.createParameters(Parameters.java:700)
at org.testng.internal.Parameters.handleParameters(Parameters.java:884)
at org.testng.internal.Parameters.handleParameters(Parameters.java:740)
at org.testng.internal.ParameterHandler.handleParameters(ParameterHandler.java:59)
at org.testng.internal.ParameterHandler.createParameters(ParameterHandler.java:38)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:791)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- orange -->
      </class> <!-- com.javatpoint.parameters.Fruits -->
      <class name="com.toolsqa.GetBrowserTitle">
        <test-method signature="f()[pri:0, instance:com.toolsqa.GetBrowserTitle@54709809]" started-at="2024-09-08T01:43:40 WIB" name="f" finished-at="2024-09-08T01:43:47 WIB" duration-ms="6689" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.toolsqa.GetBrowserTitle@54709809]" started-at="2024-09-08T01:43:40 WIB" name="beforeMethod" finished-at="2024-09-08T01:43:40 WIB" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.toolsqa.GetBrowserTitle@54709809]" started-at="2024-09-08T01:43:47 WIB" name="afterMethod" finished-at="2024-09-08T01:43:47 WIB" duration-ms="258" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.toolsqa.GetBrowserTitle -->
      <class name="com.javatpoint.annotations.Time_out">
        <test-method signature="testcase1()[pri:0, instance:com.javatpoint.annotations.Time_out@2a2da905]" started-at="2024-09-08T01:44:00 WIB" name="testcase1" finished-at="2024-09-08T01:44:00 WIB" duration-ms="269" status="FAIL">
          <exception class="org.testng.internal.thread.ThreadTimeoutException">
            <message>
              <![CDATA[Method com.javatpoint.annotations.Time_out.testcase1() didn't finish within the time-out 200]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.internal.thread.ThreadTimeoutException: Method com.javatpoint.annotations.Time_out.testcase1() didn't finish within the time-out 200
at org.testng.internal.MethodInvocationHelper.invokeWithTimeoutWithNewExecutor(MethodInvocationHelper.java:384)
at org.testng.internal.MethodInvocationHelper.invokeWithTimeout(MethodInvocationHelper.java:283)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:604)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.internal.thread.ThreadTimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase1 -->
        <test-method signature="testcase2()[pri:0, instance:com.javatpoint.annotations.Time_out@2a2da905]" started-at="2024-09-08T01:44:00 WIB" name="testcase2" finished-at="2024-09-08T01:44:00 WIB" duration-ms="31" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase2 -->
        <test-method signature="testcase3()[pri:0, instance:com.javatpoint.annotations.Time_out@2a2da905]" started-at="2024-09-08T01:44:00 WIB" name="testcase3" finished-at="2024-09-08T01:44:00 WIB" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase3 -->
      </class> <!-- com.javatpoint.annotations.Time_out -->
      <class name="com.javatpoint.afterMethod.After_Methods">
        <test-method signature="c_programmers()[pri:0, instance:com.javatpoint.afterMethod.After_Methods@24f360b2]" started-at="2024-09-08T01:43:40 WIB" name="c_programmers" finished-at="2024-09-08T01:43:40 WIB" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- c_programmers -->
        <test-method is-config="true" signature="after_method()[pri:0, instance:com.javatpoint.afterMethod.After_Methods@24f360b2]" started-at="2024-09-08T01:43:40 WIB" name="after_method" finished-at="2024-09-08T01:43:40 WIB" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after_method -->
        <test-method signature="dotnet_developer()[pri:0, instance:com.javatpoint.afterMethod.After_Methods@24f360b2]" started-at="2024-09-08T01:43:40 WIB" name="dotnet_developer" finished-at="2024-09-08T01:43:40 WIB" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dotnet_developer -->
        <test-method is-config="true" signature="after_method()[pri:0, instance:com.javatpoint.afterMethod.After_Methods@24f360b2]" started-at="2024-09-08T01:43:40 WIB" name="after_method" finished-at="2024-09-08T01:43:40 WIB" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after_method -->
        <test-method signature="java_programmers()[pri:0, instance:com.javatpoint.afterMethod.After_Methods@24f360b2]" started-at="2024-09-08T01:43:47 WIB" name="java_programmers" finished-at="2024-09-08T01:43:47 WIB" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- java_programmers -->
        <test-method is-config="true" signature="after_method()[pri:0, instance:com.javatpoint.afterMethod.After_Methods@24f360b2]" started-at="2024-09-08T01:43:47 WIB" name="after_method" finished-at="2024-09-08T01:43:47 WIB" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after_method -->
      </class> <!-- com.javatpoint.afterMethod.After_Methods -->
      <class name="com.javatpoint.afterGroups.After_groups">
        <test-method signature="testcase1()[pri:0, instance:com.javatpoint.afterGroups.After_groups@f31c0c6]" started-at="2024-09-08T01:44:00 WIB" name="testcase1" finished-at="2024-09-08T01:44:00 WIB" duration-ms="11" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase1 -->
        <test-method signature="testcase2()[pri:0, instance:com.javatpoint.afterGroups.After_groups@f31c0c6]" started-at="2024-09-08T01:44:00 WIB" name="testcase2" finished-at="2024-09-08T01:44:00 WIB" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase2 -->
        <test-method signature="testcase3()[pri:0, instance:com.javatpoint.afterGroups.After_groups@f31c0c6]" started-at="2024-09-08T01:44:00 WIB" name="testcase3" finished-at="2024-09-08T01:44:00 WIB" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase3 -->
      </class> <!-- com.javatpoint.afterGroups.After_groups -->
      <class name="com.toolsqa.TestNGAssertions">
        <test-method signature="OpenBrowser()[pri:-1, instance:com.toolsqa.TestNGAssertions@51768776]" started-at="2024-09-08T01:42:27 WIB" name="OpenBrowser" finished-at="2024-09-08T01:43:07 WIB" duration-ms="40362" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Free QA Automation Tools For Everyone] but found [DEMOQA]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Free QA Automation Tools For Everyone] but found [DEMOQA]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at com.toolsqa.TestNGAssertions.OpenBrowser(TestNGAssertions.java:28)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[This test verifies the current selenium compatibility with TestNG by launching the chrome driver]]>
            </line>
            <line>
              <![CDATA[Launching Google Chrome Driver version 81 for this test]]>
            </line>
            <line>
              <![CDATA[The website used was demoqa for this test]]>
            </line>
          </reporter-output>
        </test-method> <!-- OpenBrowser -->
        <test-method signature="CloseBrowser()[pri:0, instance:com.toolsqa.TestNGAssertions@51768776]" started-at="2024-09-08T01:43:07 WIB" name="CloseBrowser" finished-at="2024-09-08T01:43:08 WIB" duration-ms="350" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Driver Closed After Testing]]>
            </line>
          </reporter-output>
        </test-method> <!-- CloseBrowser -->
      </class> <!-- com.toolsqa.TestNGAssertions -->
      <class name="com.javatpoint.parameters.Multiply">
        <test-method signature="add(int,int)[pri:0, instance:com.javatpoint.parameters.Multiply@4a9419d7]" started-at="2024-09-08T01:43:40 WIB" name="add" finished-at="2024-09-08T01:43:40 WIB" duration-ms="0" status="FAIL">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Parameter 'a' is required by @Test on method add but has not been marked @Optional or defined
in C:\Users\Johan Linda\AppData\Local\Temp\testng-eclipse--1693924006\testng-customsuite.xml]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Parameter 'a' is required by @Test on method add but has not been marked @Optional or defined
in C:\Users\Johan Linda\AppData\Local\Temp\testng-eclipse--1693924006\testng-customsuite.xml
at org.testng.internal.Parameters.createParams(Parameters.java:270)
at org.testng.internal.Parameters.createParametersForMethod(Parameters.java:358)
at org.testng.internal.Parameters.createParameters(Parameters.java:700)
at org.testng.internal.Parameters.handleParameters(Parameters.java:884)
at org.testng.internal.Parameters.handleParameters(Parameters.java:740)
at org.testng.internal.ParameterHandler.handleParameters(ParameterHandler.java:59)
at org.testng.internal.ParameterHandler.createParameters(ParameterHandler.java:38)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:791)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- add -->
      </class> <!-- com.javatpoint.parameters.Multiply -->
      <class name="com.javatpoint.beforeSuite.Personal_loan">
        <test-method is-config="true" signature="before_suite()[pri:0, instance:com.javatpoint.beforeSuite.Personal_loan@b93aad]" started-at="2024-09-08T01:42:27 WIB" name="before_suite" finished-at="2024-09-08T01:42:27 WIB" duration-ms="17" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before_suite -->
        <test-method signature="personal_loan()[pri:0, instance:com.javatpoint.beforeSuite.Personal_loan@b93aad]" started-at="2024-09-08T01:43:47 WIB" name="personal_loan" finished-at="2024-09-08T01:43:47 WIB" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- personal_loan -->
      </class> <!-- com.javatpoint.beforeSuite.Personal_loan -->
      <class name="com.javatpoint.afterTest.Recurring_deposit">
        <test-method signature="recurring_deposit()[pri:0, instance:com.javatpoint.afterTest.Recurring_deposit@2f3c6ac4]" started-at="2024-09-08T01:43:47 WIB" name="recurring_deposit" finished-at="2024-09-08T01:43:47 WIB" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recurring_deposit -->
        <test-method is-config="true" signature="after_test()[pri:0, instance:com.javatpoint.afterTest.Recurring_deposit@2f3c6ac4]" started-at="2024-09-08T01:44:02 WIB" name="after_test" finished-at="2024-09-08T01:44:02 WIB" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after_test -->
      </class> <!-- com.javatpoint.afterTest.Recurring_deposit -->
      <class name="com.javatpoint.parameters.Vegetable">
        <test-method signature="c(java.lang.String)[pri:0, instance:com.javatpoint.parameters.Vegetable@2e8ab815]" started-at="2024-09-08T01:43:40 WIB" name="c" finished-at="2024-09-08T01:43:40 WIB" duration-ms="0" status="FAIL">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Parameter 'Cauliflower' is required by @Test on method c but has not been marked @Optional or defined
in C:\Users\Johan Linda\AppData\Local\Temp\testng-eclipse--1693924006\testng-customsuite.xml]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Parameter 'Cauliflower' is required by @Test on method c but has not been marked @Optional or defined
in C:\Users\Johan Linda\AppData\Local\Temp\testng-eclipse--1693924006\testng-customsuite.xml
at org.testng.internal.Parameters.createParams(Parameters.java:270)
at org.testng.internal.Parameters.createParametersForMethod(Parameters.java:358)
at org.testng.internal.Parameters.createParameters(Parameters.java:700)
at org.testng.internal.Parameters.handleParameters(Parameters.java:884)
at org.testng.internal.Parameters.handleParameters(Parameters.java:740)
at org.testng.internal.ParameterHandler.handleParameters(ParameterHandler.java:59)
at org.testng.internal.ParameterHandler.createParameters(ParameterHandler.java:38)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:791)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- c -->
        <test-method signature="orange(java.lang.String)[pri:0, instance:com.javatpoint.parameters.Vegetable@2e8ab815]" started-at="2024-09-08T01:43:47 WIB" name="orange" finished-at="2024-09-08T01:43:47 WIB" duration-ms="0" status="FAIL">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Parameter 'Ladyfinger' is required by @Test on method orange but has not been marked @Optional or defined
in C:\Users\Johan Linda\AppData\Local\Temp\testng-eclipse--1693924006\testng-customsuite.xml]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Parameter 'Ladyfinger' is required by @Test on method orange but has not been marked @Optional or defined
in C:\Users\Johan Linda\AppData\Local\Temp\testng-eclipse--1693924006\testng-customsuite.xml
at org.testng.internal.Parameters.createParams(Parameters.java:270)
at org.testng.internal.Parameters.createParametersForMethod(Parameters.java:358)
at org.testng.internal.Parameters.createParameters(Parameters.java:700)
at org.testng.internal.Parameters.handleParameters(Parameters.java:884)
at org.testng.internal.Parameters.handleParameters(Parameters.java:740)
at org.testng.internal.ParameterHandler.handleParameters(ParameterHandler.java:59)
at org.testng.internal.ParameterHandler.createParameters(ParameterHandler.java:38)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:791)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- orange -->
      </class> <!-- com.javatpoint.parameters.Vegetable -->
      <class name="com.javatpoint.afterSuite.Module1">
        <test-method signature="a_test()[pri:0, instance:com.javatpoint.afterSuite.Module1@d1f74b8]" started-at="2024-09-08T01:43:40 WIB" name="a_test" finished-at="2024-09-08T01:43:40 WIB" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- a_test -->
        <test-method signature="b_test()[pri:0, instance:com.javatpoint.afterSuite.Module1@d1f74b8]" started-at="2024-09-08T01:43:40 WIB" name="b_test" finished-at="2024-09-08T01:43:40 WIB" duration-ms="35" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- b_test -->
      </class> <!-- com.javatpoint.afterSuite.Module1 -->
      <class name="com.javatpoint.afterClass.Class2">
        <test-method signature="testcase1()[pri:0, instance:com.javatpoint.afterClass.Class2@67af833b]" started-at="2024-09-08T01:44:00 WIB" name="testcase1" finished-at="2024-09-08T01:44:00 WIB" duration-ms="28" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase1 -->
        <test-method signature="testcase2()[pri:0, instance:com.javatpoint.afterClass.Class2@67af833b]" started-at="2024-09-08T01:44:00 WIB" name="testcase2" finished-at="2024-09-08T01:44:00 WIB" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase2 -->
        <test-method signature="testcase3()[pri:0, instance:com.javatpoint.afterClass.Class2@67af833b]" started-at="2024-09-08T01:44:00 WIB" name="testcase3" finished-at="2024-09-08T01:44:00 WIB" duration-ms="13" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase3 -->
        <test-method signature="testcase4()[pri:0, instance:com.javatpoint.afterClass.Class2@67af833b]" started-at="2024-09-08T01:44:00 WIB" name="testcase4" finished-at="2024-09-08T01:44:00 WIB" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase4 -->
        <test-method is-config="true" signature="after_class()[pri:0, instance:com.javatpoint.afterClass.Class2@67af833b]" started-at="2024-09-08T01:44:00 WIB" name="after_class" finished-at="2024-09-08T01:44:00 WIB" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after_class -->
      </class> <!-- com.javatpoint.afterClass.Class2 -->
      <class name="com.javatpoint.afterSuite.Module2">
        <test-method signature="c_test()[pri:0, instance:com.javatpoint.afterSuite.Module2@3a0807b7]" started-at="2024-09-08T01:43:40 WIB" name="c_test" finished-at="2024-09-08T01:43:40 WIB" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- c_test -->
        <test-method is-config="true" signature="after_suite()[pri:0, instance:com.javatpoint.afterSuite.Module2@3a0807b7]" started-at="2024-09-08T01:44:03 WIB" name="after_suite" finished-at="2024-09-08T01:44:03 WIB" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after_suite -->
      </class> <!-- com.javatpoint.afterSuite.Module2 -->
      <class name="com.javatpoint.afterClass.Class1">
        <test-method signature="testcase1()[pri:0, instance:com.javatpoint.afterClass.Class1@41394595]" started-at="2024-09-08T01:44:00 WIB" name="testcase1" finished-at="2024-09-08T01:44:00 WIB" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase1 -->
        <test-method signature="testcase2()[pri:0, instance:com.javatpoint.afterClass.Class1@41394595]" started-at="2024-09-08T01:44:00 WIB" name="testcase2" finished-at="2024-09-08T01:44:00 WIB" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase2 -->
        <test-method signature="testcase3()[pri:0, instance:com.javatpoint.afterClass.Class1@41394595]" started-at="2024-09-08T01:44:00 WIB" name="testcase3" finished-at="2024-09-08T01:44:00 WIB" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase3 -->
        <test-method is-config="true" signature="after_class()[pri:0, instance:com.javatpoint.afterClass.Class1@41394595]" started-at="2024-09-08T01:44:00 WIB" name="after_class" finished-at="2024-09-08T01:44:00 WIB" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after_class -->
      </class> <!-- com.javatpoint.afterClass.Class1 -->
      <class name="com.toolsqa.MultipleDependentTestMethods">
        <test-method signature="OpenBrowser()[pri:0, instance:com.toolsqa.MultipleDependentTestMethods@5769e7ae]" started-at="2024-09-08T01:43:08 WIB" name="OpenBrowser" finished-at="2024-09-08T01:43:08 WIB" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OpenBrowser -->
        <test-method signature="SignIn()[pri:0, instance:com.toolsqa.MultipleDependentTestMethods@5769e7ae]" started-at="2024-09-08T01:43:39 WIB" name="SignIn" finished-at="2024-09-08T01:43:39 WIB" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SignIn -->
        <test-method signature="LogOut()[pri:0, instance:com.toolsqa.MultipleDependentTestMethods@5769e7ae]" started-at="2024-09-08T01:43:39 WIB" name="LogOut" finished-at="2024-09-08T01:43:39 WIB" depends-on-methods="com.toolsqa.MultipleDependentTestMethods.OpenBrowser, com.toolsqa.MultipleDependentTestMethods.SignIn" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LogOut -->
      </class> <!-- com.toolsqa.MultipleDependentTestMethods -->
      <class name="com.javatpoint.parameters.Sum">
        <test-method signature="add(int,int)[pri:0, instance:com.javatpoint.parameters.Sum@21a5fd96]" started-at="2024-09-08T01:43:40 WIB" name="add" finished-at="2024-09-08T01:43:40 WIB" duration-ms="0" status="FAIL">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Parameter 'a' is required by @Test on method add but has not been marked @Optional or defined
in C:\Users\Johan Linda\AppData\Local\Temp\testng-eclipse--1693924006\testng-customsuite.xml]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Parameter 'a' is required by @Test on method add but has not been marked @Optional or defined
in C:\Users\Johan Linda\AppData\Local\Temp\testng-eclipse--1693924006\testng-customsuite.xml
at org.testng.internal.Parameters.createParams(Parameters.java:270)
at org.testng.internal.Parameters.createParametersForMethod(Parameters.java:358)
at org.testng.internal.Parameters.createParameters(Parameters.java:700)
at org.testng.internal.Parameters.handleParameters(Parameters.java:884)
at org.testng.internal.Parameters.handleParameters(Parameters.java:740)
at org.testng.internal.ParameterHandler.handleParameters(ParameterHandler.java:59)
at org.testng.internal.ParameterHandler.createParameters(ParameterHandler.java:38)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:791)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- add -->
      </class> <!-- com.javatpoint.parameters.Sum -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
